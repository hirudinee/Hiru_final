{"EDITOR_STATE":{"allProjectFiles":{"c8f9e70d-1f42-4b7e-9c11-4afa891f086f":{"id":"c8f9e70d-1f42-4b7e-9c11-4afa891f086f","parent":null,"name":"Hiru_final","type":"DIRECTORY","isDirectory":true,"children":["193ab998-f4e4-4555-aadb-fe89f34b8bee","dba52203-ff59-4e0c-98d0-07fd98276cac","d092f21b-2f7c-4379-b41b-d125c7b7ac54"],"isRemovable":false,"filePath":"Hiru_final"},"193ab998-f4e4-4555-aadb-fe89f34b8bee":{"id":"193ab998-f4e4-4555-aadb-fe89f34b8bee","parent":"c8f9e70d-1f42-4b7e-9c11-4afa891f086f","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"Hiru_final/lambda.js","code":"let AWS = require('aws-sdk');\nlet SL = require('@slappforge/slappforge-sdk');\nconst sqs = new SL.AWS.SQS(AWS);\nexports.handler = function (event, context, callback) {\n\tsqs.sendMessage({\n\t\tMessageBody: 'This is a test message',\n\t\tQueueUrl: 'https://sqs.us-east-2.amazonaws.com/480964559519/Hiru_final',\n\t\tDelaySeconds: '0',\n\t\tMessageAttributes: {\n\t\t\t\"sample\": {\n\t\t\t\t\"DataType\": \"String\",\n\t\t\t\t\"StringValue\": \"123\"\n\t\t\t},\n\t\t\t\"test\": {\n\t\t\t\t\"DataType\": \"Number\",\n\t\t\t\t\"StringValue\": \"11\"\n\t\t\t},\n\t\t\t\"binary\": {\n\t\t\t\t\"DataType\": \"Binary\",\n\t\t\t\t\"BinaryValue\": \"01\"\n\t\t\t}\n\t\t}\n\t}, function (data) {\n\t\tconsole.log('data ',data);\n\t}, function (error) {\n\t\tconsole.log('Error ',error);\n\t});\n\n\n\tcallback(null, 'Successfully executed');\n}","triggers":[{"resourceName":"apigusEast2Hirufinaltestany","config":{}}],"version":1},"dba52203-ff59-4e0c-98d0-07fd98276cac":{"id":"dba52203-ff59-4e0c-98d0-07fd98276cac","parent":"c8f9e70d-1f42-4b7e-9c11-4afa891f086f","name":"testlambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"Hiru_final/testlambda.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nconst rds = new SL.AWS.RDS(connectionManager);\nlet SL = require('@slappforge/slappforge-sdk');\nconst sqs = new SL.AWS.SQS(AWS);\nconst sns = new AWS.SNS();\nexports.handler = function (event, context, callback) {\n\n\tsns.subscribe({\n\t\tProtocol: 'application',\n\t\tEndpoint: 'hirudineel@gmail.com',\n\t\tTopicArn: 'arn:aws:sns:us-east-2:480964559519:Hiru'\n\t}).promise()\n\t\t.then(data => {\n\t\t\t// your code goes here\n\t\t})\n\t\t.catch(err => {\n\t\t\t// error handling goes here\n\t\t});\n\n\tsns.getTopicAttributes({\n\t\tTopicArn: 'arn:aws:sns:us-east-2:480964559519:Hiru'\n\t}).promise()\n\t\t.then(data => {\n\t\t\t// your code goes here\n\t\t})\n\t\t.catch(err => {\n\t\t\t// error handling goes here\n\t\t});\n\tsns.publish({\n\t\tMessage: 'sample',\n\t\tSubject: 'Test',\n\t\tMessageAttributes: {\n\t\t\t'1': {\n\t\t\t\tDataType: 'String',\n\t\t\t\tStringValue: '11'\n\t\t\t},\n\t\t\t'2': {\n\t\t\t\tDataType: 'String.Array',\n\t\t\t\tStringValue: '22'\n\t\t\t},\n\t\t\t'3': {\n\t\t\t\tDataType: 'Number',\n\t\t\t\tStringValue: '23'\n\t\t\t},\n\t\t\t'4': {\n\t\t\t\tDataType: 'Binary',\n\t\t\t\tBinaryValue: '10'\n\t\t\t},\n\t\t},\n\t\tMessageStructure: 'String',\n\t\tTopicArn: 'arn:aws:sns:us-east-2:480964559519:Hiru'\n\t}).promise()\n\t\t.then(data => {\n\t\t\t// your code goes here\n\t\t})\n\t\t.catch(err => {\n\t\t\t// error handling goes here\n\t\t});\n\n\n\t// You must always end/destroy the DB connection after it's used\n\trds.beginTransaction({\n\t\tinstanceIdentifier: 'hiru'\n\t}, function (error, connection) {\n\t\tif (error) { throw err; }\n\t});\n\n\n\n\tsqs.sendMessage({\n\t\tMessageBody: 'w',\n\t\tQueueUrl: 'https://sqs.us-east-2.amazonaws.com/480964559519/Hiru_final',\n\t\tDelaySeconds: '0',\n\t\tMessageAttributes: {\n\t\t\t\"test\": {\n\t\t\t\t\"DataType\": \"Number\",\n\t\t\t\t\"StringValue\": \"1\"\n\t\t\t}\n\t\t}\n\t}, function (data) {\n\t\t// your logic (logging etc) to handle successful message delivery, should be here\n\t}, function (error) {\n\t\t// your logic (logging etc) to handle failures, should be here\n\t});\n\n\n\tcallback(null, 'Successfully executed');\n}","triggers":[{"resourceName":"apigusEast2Hirufinaltestget","config":{}}],"version":6},"d092f21b-2f7c-4379-b41b-d125c7b7ac54":{"id":"d092f21b-2f7c-4379-b41b-d125c7b7ac54","parent":"c8f9e70d-1f42-4b7e-9c11-4afa891f086f","name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"Hiru_final/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n\n    this.dbConnections[\"hiru\"] = {\n            host: process.env.EndPoint_rdsHiru,\n            port: process.env.Port_rdsHiru,\n            user: process.env.User_rdsHiru,\n            password: process.env.Password_rdsHiru,\n            database: \"hiru\",\n        };\n    };","triggers":[]}},"rootNode":"c8f9e70d-1f42-4b7e-9c11-4afa891f086f","openFiles":["193ab998-f4e4-4555-aadb-fe89f34b8bee","dba52203-ff59-4e0c-98d0-07fd98276cac"],"currentFileId":"dba52203-ff59-4e0c-98d0-07fd98276cac","resources":{"apigusEast2Hirufinaltestany":{"name":"apigusEast2Hirufinaltestany","type":"API_GATEWAY","config":{"selectedRegion":"us-east-2","apiMode":0,"apiName":"Hiru_final","endpointType":"REGIONAL","resourceMode":0,"resourceName":"test","resourcePath":"/test","restMethod":"ANY","proxyIntegration":true,"enableCORS":true,"stageMode":0,"stageName":"Prod"},"globallyEditable":true},"sqsusEast2Hirufinal":{"name":"sqsusEast2Hirufinal","type":"SQS","config":{"mode":0,"existing":false,"name":"Hiru_final","url":"https://sqs.us-east-2.amazonaws.com/480964559519/Hiru_final","selectedRegion":"us-east-2","deliveryDelay":0,"deliveryDelayUnit":"seconds","useRedrivePolicy":false,"useSSE":false,"kmsCustomerMasterKey":"default","accountId":"480964559519","dataKeyReusePeriod":5,"queueType":"standardQueue","defaultVisibilityTimeout":30,"defaultVisibilityTimeoutUnit":"seconds","messageRetentionPeriod":4,"messageRetentionPeriodUnit":"days","maximumMessageSize":256,"receiveMessageWaitTime":0,"deadLetterQueueName":"","contentBasedDeduplication":false,"operation":1,"createdByApp":true},"globallyEditable":true,"existing":false},"apigusEast2Hirufinaltestget":{"name":"apigusEast2Hirufinaltestget","type":"API_GATEWAY","config":{"selectedRegion":"us-east-2","apiMode":0,"apiName":"Hiru_final","apiId":"dwtjjvdaz6","endpointType":"REGIONAL","rootResourceId":"r2fuqg1my8","existingResources":{"/":"r2fuqg1my8","/test":"r36mhm"},"resourceMode":0,"resourcePath":"/test","resourceName":"test","resourceId":"r36mhm","restMethod":"GET","proxyIntegration":false,"enableCORS":false,"stageMode":0,"stageName":"Prod","stageDeploymentId":"a5vaa3"},"globallyEditable":true},"cwehiru":{"name":"cwehiru","type":"CLOUD_WATCH","config":{"mode":0,"name":"hiru","description":"","eventPattern":{"source":["aws.s3"]}},"globallyEditable":true},"snsDirectSMSResource":{"name":"snsDirectSMSResource","type":"SNS","config":{"snsType":1,"numbers":["+94715397214"]},"globallyEditable":false},"snsusEast2Hiru":{"name":"snsusEast2Hiru","type":"SNS","config":{"topicMode":0,"topicName":"Hiru","topicArn":"arn:aws:sns:us-east-2:480964559519:Hiru","topicRegion":"us-east-2","snsType":0,"subscriptions":[]},"globallyEditable":true},"rds-hiru":{"name":"rds-hiru","type":"RDS","config":{"editMode":false,"operation":1,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"","rdsInstanceSpec":{"dbInstanceClass":"","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.29"},"rdsSetting":{"instanceIdentifier":"hiru","masterUsername":"hiru","masterPassword":"hiruhiru"},"rdsDBOptions":{"dbName":"hiru","dbPort":"3306"},"rdsInstanceArn":"","Host":"","doesExist":false,"initializationQuery":"","alreadyDeployed":false},"rdsInstanceResources":[],"projectRegion":"us-east-2","mode":0,"additionalFiles":[],"params":{"query":"","inserts":""},"isGlobalEditMode":false,"enableInject":true,"isNewFromGlobal":false},"globallyEditable":true}},"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk":{"name":"@slappforge/slappforge-sdk","version":"0.0.3","notRemovable":true,"types":"\n                    declare class RDSQueryParams {\n    instanceIdentifier: string;\n    query: string;\n    inserts: Array<any>\n}\n\ndeclare namespace SL.AWS {\n    class RDS {\n        query(params: RDSQueryParams, callback: Function, connection: any): void;\n\n        beginTransaction(params: any, callback: Function): void;\n    }\n\n    class SQS {\n        receiveAndDeleteMessages(params: any, filteringCallBack: Function, deleteCallBack: Function, errorCallBack: Function): void;\n    }\n}\n"},"SL":"0.0.3"}},"lambdaId":"193ab998-f4e4-4555-aadb-fe89f34b8bee","additionalFiles":[]},"PROJECT_META":{"projectName":"Hiru_final","projectDescription":"This is a test project","projectVersion":"1.0.0","projectRegion":"us-east-2","repoName":"Hiru_final","repoUrl":"https://github.com/hirudinee/Hiru_final","lastSave":1518770624989}}